- hosts: master
  become: yes
  tasks:
    - name: Initialize the cluster
      shell: kubeadm init --pod-network-cidr=10.244.0.0/16
      args:
        chdir: $HOME
      register: init_output
      failed_when: "'error' in init_output.stderr or init_output.rc != 0"

    - name: Save initialization output to a file
      copy:
        content: "{{ init_output.stdout }}"
        dest: /root/cluster_initialized.txt
        mode: 0644  

    - name: Create .kube directory
      file:
        path: /root/.kube
        state: directory
        mode: 0755

    - name: Copy admin.conf to user's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /root/.kube/config
        remote_src: yes
        owner: root
        mode: 0644

    - name: Synchronize config to the remote hosts
      shell: rsync -acP /root/.kube/ /opt/kuber-volume/.kube/

    - name: Install Pod network with Flannel
      shell: kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
      args:
        chdir: $HOME
      register: flannel_output
      failed_when: "'error' in flannel_output.stderr or flannel_output.rc != 0"

    - name: Save Pod network setup log
      copy:
        content: "{{ flannel_output.stdout }}"
        dest: /root/pod_network_setup.txt
        mode: 0644

    - name: Generate kubeadm join token
      shell: kubeadm token create --print-join-command
      register: join_command_output

    - name: Extract token and hash from join command
      set_fact:
        master_ip: "{{ ansible_host }}"
        join_command: "{{ join_command_output.stdout }}"
        token: "{{ join_command.split(' ')[4] }}"
        ca_hash: "{{ join_command.split(' ')[6].split(':')[-1] }}"
      
    - name: Save join variables to hostvars
      set_fact:
        worker_join_vars:
          master_ip: "{{ ansible_host }}"
          token: "{{ join_command.split(' ')[4] }}"
          ca_hash: "{{ join_command.split(' ')[6].split(':')[-1] }}"
      delegate_to: localhost

    - name: Display master IP in console
      debug:
        msg: "The master IP is: {{ master_ip }}"
      delegate_to: localhost 

- hosts: workers
  become: yes
  tasks:
    - name: Synchronize kube config
      shell: rsync -acP /opt/kuber-volume/.kube/ $HOME/.kube/

    - name: Join worker nodes to the cluster
      shell: kubeadm join {{ hostvars['master']['worker_join_vars']['master_ip'] }}:6443 --token {{ hostvars['master']['worker_join_vars']['token'] }} --discovery-token-ca-cert-hash sha256:{{ hostvars['master']['worker_join_vars']['ca_hash'] }}
      register: join_output
      failed_when: "'error' in join_output.stderr or join_output.rc != 0"

    - name: Save join output to a file
      copy:
        content: "{{ join_output.stdout }}"
        dest: /root/node_joined.txt
        mode: 0644
