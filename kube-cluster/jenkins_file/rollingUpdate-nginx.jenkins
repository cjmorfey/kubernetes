#!groovy
// Rolling update
properties([disableConcurrentBuilds()])

pipeline {
    agent {
        label 'slave'
    }


    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
        ansiColor("xterm")
    }
    stages {
        stage("Git pull") {
            steps {              
                echo " ==========Git PULL Updataes========= "
                sh 'cd /root/kubernetes'
                sh 'git pull'               
            }
        } 
        stage("Rolling Update Nginx") {
            environment {
                ANSIBLE_FORCE_COLOR = true
            }
            input {
                message "K8S cluster will be UPDATING!!!"
                ok "Yes"
                parameters { booleanParam(name: 'Are you sure?', defaultValue: false, description: '') }
            }
            steps {
                echo " ==========Rolling update========= "

                sh 'kubectl -n webserver get -f /root/kubernetes/deployments/rollingUpdate_nginx.yaml --ignore-not-found'
                sh 'kubectl -n webserver replace --save-config -f -'
                sh 'kubectl apply -f /root/kubernetes/deployments/rollingUpdate_nginx.yaml --record=false'

                sh 'kubectl -n webserver rollout status deployment nginx-deployment'
            }
        }    
        stage("Create HPA Nginx"){
            steps {
                sh 'kubectl -n webserver apply -f /root/kubernetes/deployments/hpa_nginx.yaml'
            }
        }

    }
}
